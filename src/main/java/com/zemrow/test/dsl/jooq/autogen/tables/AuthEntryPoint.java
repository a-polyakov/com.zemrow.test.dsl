/*
 * This file is generated by jOOQ.
*/
package com.zemrow.test.dsl.jooq.autogen.tables;


import com.zemrow.test.dsl.jooq.autogen.Auth;
import com.zemrow.test.dsl.jooq.autogen.Keys;
import com.zemrow.test.dsl.jooq.autogen.tables.records.AuthEntryPointRecord;
import org.jooq.*;
import org.jooq.impl.TableImpl;

import javax.annotation.Generated;
import java.util.Arrays;
import java.util.List;
import java.util.UUID;


/**
 * Способы авторизации пользователя
 */
@Generated(
        value = {
                "http://www.jooq.org",
                "jOOQ version:3.9.0"
        },
        comments = "This class is generated by jOOQ"
)
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class AuthEntryPoint extends TableImpl<AuthEntryPointRecord> {

    private static final long serialVersionUID = -29782990;

    /**
     * The reference instance of <code>auth.auth_entry_point</code>
     */
    public static final AuthEntryPoint AUTH_ENTRY_POINT = new AuthEntryPoint();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<AuthEntryPointRecord> getRecordType() {
        return AuthEntryPointRecord.class;
    }

    /**
     * The column <code>auth.auth_entry_point.id</code>. ID записи
     */
    public final TableField<AuthEntryPointRecord, UUID> ID = createField("id", org.jooq.impl.SQLDataType.UUID.nullable(false), this, "ID записи");

    /**
     * The column <code>auth.auth_entry_point.auth_user_id</code>. ID пользователя
     */
    public final TableField<AuthEntryPointRecord, UUID> AUTH_USER_ID = createField("auth_user_id", org.jooq.impl.SQLDataType.UUID.nullable(false), this, "ID пользователя");

    /**
     * The column <code>auth.auth_entry_point.entry_point_type</code>. Способ(система) авторизации: логин_пароль, vk.com, google, ...
     */
    public final TableField<AuthEntryPointRecord, String> ENTRY_POINT_TYPE = createField("entry_point_type", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "Способ(система) авторизации: логин_пароль, vk.com, google, ...");

    /**
     * The column <code>auth.auth_entry_point.client_id</code>. Идентификатор в системе авторизации (логин)
     */
    public final TableField<AuthEntryPointRecord, String> CLIENT_ID = createField("client_id", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "Идентификатор в системе авторизации (логин)");

    /**
     * The column <code>auth.auth_entry_point.credential</code>. Удостоверение личности в системе авторизации (пароль)
     */
    public final TableField<AuthEntryPointRecord, String> CREDENTIAL = createField("credential", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "Удостоверение личности в системе авторизации (пароль)");

    /**
     * The column <code>auth.auth_entry_point.validate</code>. Прошел ли подтверждени
     */
    public final TableField<AuthEntryPointRecord, Boolean> VALIDATE = createField("validate", org.jooq.impl.SQLDataType.BOOLEAN, this, "Прошел ли подтверждени");

    /**
     * The column <code>auth.auth_entry_point.create_time</code>. Дата создания записи
     */
    public final TableField<AuthEntryPointRecord, Long> CREATE_TIME = createField("create_time", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "Дата создания записи");

    /**
     * The column <code>auth.auth_entry_point.created_by</code>. Пользователь создавший запись
     */
    public final TableField<AuthEntryPointRecord, UUID> CREATED_BY = createField("created_by", org.jooq.impl.SQLDataType.UUID.nullable(false), this, "Пользователь создавший запись");

    /**
     * The column <code>auth.auth_entry_point.update_time</code>. Дата обновления записи
     */
    public final TableField<AuthEntryPointRecord, Long> UPDATE_TIME = createField("update_time", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "Дата обновления записи");

    /**
     * The column <code>auth.auth_entry_point.updated_by</code>. Пользователь обновивший запись
     */
    public final TableField<AuthEntryPointRecord, UUID> UPDATED_BY = createField("updated_by", org.jooq.impl.SQLDataType.UUID.nullable(false), this, "Пользователь обновивший запись");

    /**
     * The column <code>auth.auth_entry_point.delete_time</code>. Дата удаления записи
     */
    public final TableField<AuthEntryPointRecord, Long> DELETE_TIME = createField("delete_time", org.jooq.impl.SQLDataType.BIGINT, this, "Дата удаления записи");

    /**
     * The column <code>auth.auth_entry_point.deleted_by</code>. Пользователь удаливший запись
     */
    public final TableField<AuthEntryPointRecord, UUID> DELETED_BY = createField("deleted_by", org.jooq.impl.SQLDataType.UUID, this, "Пользователь удаливший запись");

    /**
     * Create a <code>auth.auth_entry_point</code> table reference
     */
    public AuthEntryPoint() {
        this("auth_entry_point", null);
    }

    /**
     * Create an aliased <code>auth.auth_entry_point</code> table reference
     */
    public AuthEntryPoint(String alias) {
        this(alias, AUTH_ENTRY_POINT);
    }

    private AuthEntryPoint(String alias, Table<AuthEntryPointRecord> aliased) {
        this(alias, aliased, null);
    }

    private AuthEntryPoint(String alias, Table<AuthEntryPointRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "Способы авторизации пользователя");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Auth.AUTH;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<AuthEntryPointRecord> getPrimaryKey() {
        return Keys.PK_AUTH_ENTRY_POINT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<AuthEntryPointRecord>> getKeys() {
        return Arrays.<UniqueKey<AuthEntryPointRecord>>asList(Keys.PK_AUTH_ENTRY_POINT, Keys.AUTH_ENTRY_POINT_ENTRY_POINT_TYPE_CLIENT_ID_KEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<AuthEntryPointRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<AuthEntryPointRecord, ?>>asList(Keys.AUTH_ENTRY_POINT__AUTH_ENTRY_POINT__AUTH_USER_ID__FK, Keys.AUTH_ENTRY_POINT__AUTH_ENTRY_POINT__CREATED_BY__FK, Keys.AUTH_ENTRY_POINT__AUTH_ENTRY_POINT__UPDATED_BY__FK, Keys.AUTH_ENTRY_POINT__AUTH_ENTRY_POINT__DELETED_BY__FK);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AuthEntryPoint as(String alias) {
        return new AuthEntryPoint(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public AuthEntryPoint rename(String name) {
        return new AuthEntryPoint(name, null);
    }
}
