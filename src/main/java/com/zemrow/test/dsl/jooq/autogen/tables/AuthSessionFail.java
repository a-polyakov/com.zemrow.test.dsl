/*
 * This file is generated by jOOQ.
*/
package com.zemrow.test.dsl.jooq.autogen.tables;


import com.zemrow.test.dsl.jooq.autogen.Auth;
import com.zemrow.test.dsl.jooq.autogen.Keys;
import com.zemrow.test.dsl.jooq.autogen.tables.records.AuthSessionFailRecord;
import org.jooq.*;
import org.jooq.impl.TableImpl;

import javax.annotation.Generated;
import java.util.Arrays;
import java.util.List;
import java.util.UUID;


/**
 * Неудачные попытки войти в систему
 */
@Generated(
        value = {
                "http://www.jooq.org",
                "jOOQ version:3.9.0"
        },
        comments = "This class is generated by jOOQ"
)
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class AuthSessionFail extends TableImpl<AuthSessionFailRecord> {

    private static final long serialVersionUID = 1358804271;

    /**
     * The reference instance of <code>auth.auth_session_fail</code>
     */
    public static final AuthSessionFail AUTH_SESSION_FAIL = new AuthSessionFail();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<AuthSessionFailRecord> getRecordType() {
        return AuthSessionFailRecord.class;
    }

    /**
     * The column <code>auth.auth_session_fail.id</code>. ID записи
     */
    public final TableField<AuthSessionFailRecord, UUID> ID = createField("id", org.jooq.impl.SQLDataType.UUID.nullable(false), this, "ID записи");

    /**
     * The column <code>auth.auth_session_fail.auth_entry_point_id</code>. Точка входа пользователя
     */
    public final TableField<AuthSessionFailRecord, UUID> AUTH_ENTRY_POINT_ID = createField("auth_entry_point_id", org.jooq.impl.SQLDataType.UUID.nullable(false), this, "Точка входа пользователя");

    /**
     * The column <code>auth.auth_session_fail.ip_address</code>. IP адрес клиента
     */
    public final TableField<AuthSessionFailRecord, String> IP_ADDRESS = createField("ip_address", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "IP адрес клиента");

    /**
     * The column <code>auth.auth_session_fail.comment</code>. Сообщение об ошибке
     */
    public final TableField<AuthSessionFailRecord, String> COMMENT = createField("comment", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "Сообщение об ошибке");

    /**
     * The column <code>auth.auth_session_fail.create_time</code>. Дата создания записи
     */
    public final TableField<AuthSessionFailRecord, Long> CREATE_TIME = createField("create_time", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "Дата создания записи");

    /**
     * Create a <code>auth.auth_session_fail</code> table reference
     */
    public AuthSessionFail() {
        this("auth_session_fail", null);
    }

    /**
     * Create an aliased <code>auth.auth_session_fail</code> table reference
     */
    public AuthSessionFail(String alias) {
        this(alias, AUTH_SESSION_FAIL);
    }

    private AuthSessionFail(String alias, Table<AuthSessionFailRecord> aliased) {
        this(alias, aliased, null);
    }

    private AuthSessionFail(String alias, Table<AuthSessionFailRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "Неудачные попытки войти в систему");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Auth.AUTH;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<AuthSessionFailRecord> getPrimaryKey() {
        return Keys.PK_AUTH_SESSION_FAIL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<AuthSessionFailRecord>> getKeys() {
        return Arrays.<UniqueKey<AuthSessionFailRecord>>asList(Keys.PK_AUTH_SESSION_FAIL);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<AuthSessionFailRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<AuthSessionFailRecord, ?>>asList(Keys.AUTH_SESSION_FAIL__AUTH_SESSION_FAIL__AUTH_ENTRY_POINT_ID__FK);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AuthSessionFail as(String alias) {
        return new AuthSessionFail(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public AuthSessionFail rename(String name) {
        return new AuthSessionFail(name, null);
    }
}
