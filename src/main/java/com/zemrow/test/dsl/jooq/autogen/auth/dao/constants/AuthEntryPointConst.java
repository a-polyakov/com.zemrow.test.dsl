/*
 * This file is generated by jOOQ.
*/
package com.zemrow.test.dsl.jooq.autogen.auth.dao.constants;


import com.zemrow.test.dsl.jooq.autogen.auth.SchemaAuthConst;
import org.jooq.*;
import org.jooq.impl.TableImpl;

import java.util.UUID;


/**
 * Способы авторизации пользователя
 */
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class AuthEntryPointConst extends TableImpl<Record> {

    private static final long serialVersionUID = -710130252;

    /**
     * The reference instance of <code>auth.auth_entry_point</code>
     */
    public static final AuthEntryPointConst AUTH_ENTRY_POINT = new AuthEntryPointConst();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<Record> getRecordType() {
        return Record.class;
    }

    /**
     * The column <code>auth.auth_entry_point.id</code>. ID записи
     */
    public final TableField<Record, UUID> ID = createField("id", org.jooq.impl.SQLDataType.UUID.nullable(false), this, "ID записи");

    /**
     * The column <code>auth.auth_entry_point.auth_user_id</code>. ID пользователя
     */
    public final TableField<Record, UUID> AUTH_USER_ID = createField("auth_user_id", org.jooq.impl.SQLDataType.UUID.nullable(false), this, "ID пользователя");

    /**
     * The column <code>auth.auth_entry_point.entry_point_type</code>. Способ(система) авторизации: логин_пароль, vk.com, google, ...
     */
    public final TableField<Record, String> ENTRY_POINT_TYPE = createField("entry_point_type", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "Способ(система) авторизации: логин_пароль, vk.com, google, ...");

    /**
     * The column <code>auth.auth_entry_point.client_id</code>. Идентификатор в системе авторизации (логин)
     */
    public final TableField<Record, String> CLIENT_ID = createField("client_id", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "Идентификатор в системе авторизации (логин)");

    /**
     * The column <code>auth.auth_entry_point.credential</code>. Удостоверение личности в системе авторизации (пароль)
     */
    public final TableField<Record, String> CREDENTIAL = createField("credential", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "Удостоверение личности в системе авторизации (пароль)");

    /**
     * The column <code>auth.auth_entry_point.validate</code>. Прошел ли подтверждени
     */
    public final TableField<Record, Boolean> VALIDATE = createField("validate", org.jooq.impl.SQLDataType.BOOLEAN, this, "Прошел ли подтверждени");

    /**
     * The column <code>auth.auth_entry_point.create_time</code>. Дата создания записи
     */
    public final TableField<Record, Long> CREATE_TIME = createField("create_time", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "Дата создания записи");

    /**
     * The column <code>auth.auth_entry_point.created_by</code>. Пользователь создавший запись
     */
    public final TableField<Record, UUID> CREATED_BY = createField("created_by", org.jooq.impl.SQLDataType.UUID.nullable(false), this, "Пользователь создавший запись");

    /**
     * The column <code>auth.auth_entry_point.update_time</code>. Дата обновления записи
     */
    public final TableField<Record, Long> UPDATE_TIME = createField("update_time", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "Дата обновления записи");

    /**
     * The column <code>auth.auth_entry_point.updated_by</code>. Пользователь обновивший запись
     */
    public final TableField<Record, UUID> UPDATED_BY = createField("updated_by", org.jooq.impl.SQLDataType.UUID.nullable(false), this, "Пользователь обновивший запись");

    /**
     * The column <code>auth.auth_entry_point.delete_time</code>. Дата удаления записи
     */
    public final TableField<Record, Long> DELETE_TIME = createField("delete_time", org.jooq.impl.SQLDataType.BIGINT, this, "Дата удаления записи");

    /**
     * The column <code>auth.auth_entry_point.deleted_by</code>. Пользователь удаливший запись
     */
    public final TableField<Record, UUID> DELETED_BY = createField("deleted_by", org.jooq.impl.SQLDataType.UUID, this, "Пользователь удаливший запись");

    /**
     * Create a <code>auth.auth_entry_point</code> table reference
     */
    public AuthEntryPointConst() {
        this("auth_entry_point", null);
    }

    /**
     * Create an aliased <code>auth.auth_entry_point</code> table reference
     */
    public AuthEntryPointConst(String alias) {
        this(alias, AUTH_ENTRY_POINT);
    }

    private AuthEntryPointConst(String alias, Table<Record> aliased) {
        this(alias, aliased, null);
    }

    private AuthEntryPointConst(String alias, Table<Record> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "Способы авторизации пользователя");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return SchemaAuthConst.AUTH;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AuthEntryPointConst as(String alias) {
        return new AuthEntryPointConst(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public AuthEntryPointConst rename(String name) {
        return new AuthEntryPointConst(name, null);
    }
}
