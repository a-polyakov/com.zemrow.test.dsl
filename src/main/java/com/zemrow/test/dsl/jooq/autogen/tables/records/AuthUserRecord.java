/*
 * This file is generated by jOOQ.
*/
package com.zemrow.test.dsl.jooq.autogen.tables.records;


import com.zemrow.test.dsl.jooq.autogen.tables.AuthUser;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record8;
import org.jooq.Row8;
import org.jooq.impl.UpdatableRecordImpl;

import javax.annotation.Generated;
import java.util.UUID;


/**
 * Пользователь
 */
@Generated(
        value = {
                "http://www.jooq.org",
                "jOOQ version:3.9.0"
        },
        comments = "This class is generated by jOOQ"
)
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class AuthUserRecord extends UpdatableRecordImpl<AuthUserRecord> implements Record8<UUID, String, Long, UUID, Long, UUID, Long, UUID> {

    private static final long serialVersionUID = 1645272409;

    /**
     * Setter for <code>auth.auth_user.id</code>. ID записи
     */
    public void setId(UUID value) {
        set(0, value);
    }

    /**
     * Getter for <code>auth.auth_user.id</code>. ID записи
     */
    public UUID getId() {
        return (UUID) get(0);
    }

    /**
     * Setter for <code>auth.auth_user.label</code>. Состояние пользователя: Не в сети, В сети, Не беспокоить
     */
    public void setLabel(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>auth.auth_user.label</code>. Состояние пользователя: Не в сети, В сети, Не беспокоить
     */
    public String getLabel() {
        return (String) get(1);
    }

    /**
     * Setter for <code>auth.auth_user.create_time</code>. Дата создания записи
     */
    public void setCreateTime(Long value) {
        set(2, value);
    }

    /**
     * Getter for <code>auth.auth_user.create_time</code>. Дата создания записи
     */
    public Long getCreateTime() {
        return (Long) get(2);
    }

    /**
     * Setter for <code>auth.auth_user.created_by</code>. Пользователь создавший запись
     */
    public void setCreatedBy(UUID value) {
        set(3, value);
    }

    /**
     * Getter for <code>auth.auth_user.created_by</code>. Пользователь создавший запись
     */
    public UUID getCreatedBy() {
        return (UUID) get(3);
    }

    /**
     * Setter for <code>auth.auth_user.update_time</code>. Дата обновления записи
     */
    public void setUpdateTime(Long value) {
        set(4, value);
    }

    /**
     * Getter for <code>auth.auth_user.update_time</code>. Дата обновления записи
     */
    public Long getUpdateTime() {
        return (Long) get(4);
    }

    /**
     * Setter for <code>auth.auth_user.updated_by</code>. Пользователь обновивший запись
     */
    public void setUpdatedBy(UUID value) {
        set(5, value);
    }

    /**
     * Getter for <code>auth.auth_user.updated_by</code>. Пользователь обновивший запись
     */
    public UUID getUpdatedBy() {
        return (UUID) get(5);
    }

    /**
     * Setter for <code>auth.auth_user.delete_time</code>. Дата удаления записи
     */
    public void setDeleteTime(Long value) {
        set(6, value);
    }

    /**
     * Getter for <code>auth.auth_user.delete_time</code>. Дата удаления записи
     */
    public Long getDeleteTime() {
        return (Long) get(6);
    }

    /**
     * Setter for <code>auth.auth_user.deleted_by</code>. Пользователь удаливший запись
     */
    public void setDeletedBy(UUID value) {
        set(7, value);
    }

    /**
     * Getter for <code>auth.auth_user.deleted_by</code>. Пользователь удаливший запись
     */
    public UUID getDeletedBy() {
        return (UUID) get(7);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<UUID> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record8 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row8<UUID, String, Long, UUID, Long, UUID, Long, UUID> fieldsRow() {
        return (Row8) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row8<UUID, String, Long, UUID, Long, UUID, Long, UUID> valuesRow() {
        return (Row8) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<UUID> field1() {
        return AuthUser.AUTH_USER.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return AuthUser.AUTH_USER.LABEL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field3() {
        return AuthUser.AUTH_USER.CREATE_TIME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<UUID> field4() {
        return AuthUser.AUTH_USER.CREATED_BY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field5() {
        return AuthUser.AUTH_USER.UPDATE_TIME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<UUID> field6() {
        return AuthUser.AUTH_USER.UPDATED_BY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field7() {
        return AuthUser.AUTH_USER.DELETE_TIME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<UUID> field8() {
        return AuthUser.AUTH_USER.DELETED_BY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UUID value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getLabel();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value3() {
        return getCreateTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UUID value4() {
        return getCreatedBy();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value5() {
        return getUpdateTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UUID value6() {
        return getUpdatedBy();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value7() {
        return getDeleteTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UUID value8() {
        return getDeletedBy();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AuthUserRecord value1(UUID value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AuthUserRecord value2(String value) {
        setLabel(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AuthUserRecord value3(Long value) {
        setCreateTime(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AuthUserRecord value4(UUID value) {
        setCreatedBy(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AuthUserRecord value5(Long value) {
        setUpdateTime(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AuthUserRecord value6(UUID value) {
        setUpdatedBy(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AuthUserRecord value7(Long value) {
        setDeleteTime(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AuthUserRecord value8(UUID value) {
        setDeletedBy(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AuthUserRecord values(UUID value1, String value2, Long value3, UUID value4, Long value5, UUID value6, Long value7, UUID value8) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached AuthUserRecord
     */
    public AuthUserRecord() {
        super(AuthUser.AUTH_USER);
    }

    /**
     * Create a detached, initialised AuthUserRecord
     */
    public AuthUserRecord(UUID id, String label, Long createTime, UUID createdBy, Long updateTime, UUID updatedBy, Long deleteTime, UUID deletedBy) {
        super(AuthUser.AUTH_USER);

        set(0, id);
        set(1, label);
        set(2, createTime);
        set(3, createdBy);
        set(4, updateTime);
        set(5, updatedBy);
        set(6, deleteTime);
        set(7, deletedBy);
    }
}
